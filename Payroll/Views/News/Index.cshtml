@using Payroll.Views.Shared.Pagination
@model Payroll.Views.Shared.Pagination.PaginationList<Payroll.Controllers.ViewModels.NewsViewModel>

@{
   ViewData["Title"] = "News List";
}

<div class="row">
   <div class="col-md-12">
      <div class="card">
         <div class="card-body">

            <!-- Breadcrumb -->
            @await Html.PartialAsync("_BreadcrumbPartial", new[]
            {
               "Admin", @ViewData["Title"], null
            })
            <br/>

            <!-- Title -->
            <div class="row">
               <div class="col-md-12">
                  <h2 class="page-title">@ViewData["Title"]</h2>
               </div>
            </div> <br/>

            <div class="row">
               <div class="col-md-4">
                  <form method="get" action="/admin/news">
                     @using (Html.BeginForm("Index", "News", FormMethod.Get))
                     {
                        @await Html.PartialAsync("_SearcherPartial")
                     }
                     </form>
                  </div>

               <!-- Create button -->
               <div class="col-md-6" style="padding-top:30px">
                  <div class="text-md-end">
                     <a asp-action="Create" class="btn btn-primary">
                        Create news
                     </a>
                  </div>
               </div>
            </div>
         </div> <br/>

         <!-- Table -->
         <div class="table-responsive">
            <table class="table table-striped">
               <thead>
               @using (Html.BeginForm("Index", "News", FormMethod.Get))
               {
                  <!-- Table Filters -->
                  @if (ViewBag.UniqueTitle != null && ViewBag.UniqueAuthor != null &&
                       ViewBag.UniqueCreateDate != null && ViewBag.UniquePublishDate != null &&
                       ViewBag.UniqueUpdateDate != null && ViewBag.UniqueActivity != null)
                  {
                     <tr>
                        <th>
                           @Html.DropDownList("SelectedTitle",
                              new SelectList(ViewBag.UniqueTitle, "Value", "Text", ViewBag.SelectedTitle),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                           @Html.DropDownList("SelectedAuthor",
                              new SelectList(ViewBag.UniqueAuthor, "Value", "Text", ViewBag.SelectedAuthor),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                           @Html.DropDownList("SelectedCreateDate",
                              new SelectList(ViewBag.UniqueCreateDate, "Value", "Text", ViewBag.SelectedCreateDate),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                           @Html.DropDownList("SelectedPublishDate",
                              new SelectList(ViewBag.UniquePublishDate, "Value", "Text", ViewBag.SelectedPublishDate),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                           @Html.DropDownList("SelectedUpdateDate",
                              new SelectList(ViewBag.UniqueUpdateDate, "Value", "Text", ViewBag.SelectedUpdateDate),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                           @Html.DropDownList("SelectedActivity",
                              new SelectList(ViewBag.UniqueActivity, "Value", "Text", ViewBag.SelectedActivity),
                              "All",
                              new {onchange = "form.submit()"})
                        </th>
                        <th>
                     </tr>
                  }

                  <!-- Table columns -->
                  <tr>
                     <th>Title</th>
                     <th>Author</th>
                     <th>Create date</th>
                     <th>Publish date</th>
                     <th>Update date</th>
                     <th>Activity</th>
                     <th style="text-align:center">Actions</th>
                  </tr>
               }
               </thead>

               <tbody>
               @if (Model.Count() == 0)
               {
                  <tr>
                     <td style="padding:30px" colspan="100">
                        The table is empty.
                     </td>
                  </tr>
               }
               else
               {
                  @foreach (var item in Model)
                  {
                     <tr>
                        <td>@item.Title</td>
                        <td>@item.Author!.UserName</td>
                        <td>@item.CreatedAt.ToString("dd.MM.yyyy")</td>
                        <td>@item.PublishedAt.ToString("dd.MM.yyyy")</td>
                        <td>@item.UpdatedAt.ToString("dd.MM.yyyy")</td>
                        <td>@item.IsActive.ToString().ToLower()</td>
                        <td style="text-align:center">
                           <button class="btn btn-outline-primary button"
                                   onclick="location.href='@Url.Action("EditNews", new {id = item.Id})'">
                              edit
                           </button>
                           <button class="btn btn-outline-danger button"
                                   onclick="showConfirmationDialog(event,
                                   'Are you sure you want to delete this news?',
                                   '@Url.Action("DeleteNews", new {id = item.Id})')">
                              delete
                           </button>
                        </td>
                     </tr>
                  }
               }
               </tbody>
               <tfoot></tfoot>
            </table>
         </div>
      </div>
   </div>
</div>

@Html.Partial("/Views/Shared/Pagination/_Pagination.cshtml", new PaginationViewModel
{
   ActionName = "Index",
   PageNumber = Model.PageNumber,
   PageSize = Model.PageSize,
   IsPreviousPageAvailable = Model.IsPreviousPageAvailable,
   IsNextPageAvailable = Model.IsNextPageAvailable,
   TotalPages = Model.TotalPages
})

@section Scripts
{
   @await Html.PartialAsync("../Shared/_DeleteConfirmationModal")
}

<style>
   table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
   }

   td,
   th {
      padding: 10px;
   }

   th,
   td {
      border: 1px solid #dddddd;
      text-align: center;
      padding: 12px;
   }

   .table-responsive {
      overflow-x: auto;
   }

   .button {
      padding: 0 0.9rem
   }
</style>